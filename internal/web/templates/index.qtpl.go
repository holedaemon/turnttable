// Code generated by qtc from "index.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

package templates

import "github.com/holedaemon/turnttable/internal/db/models"

import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

func streamformatMedium(qw422016 *qt422016.Writer, m models.Medium) {
	qw422016.N().S(`
    `)
	if m == models.MediumCD {
		qw422016.N().S(`
        CD
    `)
	} else if m == models.MediumVinyl {
		qw422016.N().S(`
        Vinyl
    `)
	} else {
		qw422016.N().S(`
        Cassette
    `)
	}
	qw422016.N().S(`
`)
}

func writeformatMedium(qq422016 qtio422016.Writer, m models.Medium) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	streamformatMedium(qw422016, m)
	qt422016.ReleaseWriter(qw422016)
}

func formatMedium(m models.Medium) string {
	qb422016 := qt422016.AcquireByteBuffer()
	writeformatMedium(qb422016, m)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}

type IndexPage struct {
	BasePage
	Rows models.RecordSlice
}

func (p *IndexPage) StreamTitle(qw422016 *qt422016.Writer) {
	qw422016.N().S(`Home`)
}

func (p *IndexPage) WriteTitle(qq422016 qtio422016.Writer) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	p.StreamTitle(qw422016)
	qt422016.ReleaseWriter(qw422016)
}

func (p *IndexPage) Title() string {
	qb422016 := qt422016.AcquireByteBuffer()
	p.WriteTitle(qb422016)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}

func (p *IndexPage) StreamBody(qw422016 *qt422016.Writer) {
	qw422016.N().S(`
<div id="buttons" class="field is-grouped is-grouped-right">
    <p class="control">
        <a class="button is-primary" href="/?filter=all">All</a>
    </p>
    <p class="control">
        <a class="button is-primary" href="/?filter=cd">CDs</a>
    </p>
    <p class="control">
        <a class="button is-primary" href="/?filter=vinyl">Vinyl</a>
    </p>
    <p class="control">
        <a class="button is-primary" href="/?filter=cassette">Tape</a>
    </p>
</div>
`)
	if len(p.Rows) == 0 {
		qw422016.N().S(`
    <nav class="level">
        <div class="level-item has-text-centered">
            <p class="title has-text-white is-size-3">No rows... wtf!!!</p>
        </div>
    </nav>
`)
	} else {
		qw422016.N().S(`
    <div class="table-container">
        <table id="turnt-table" class="table is-fullwidth">
            <thead>
                <tr>
                    <th><abbr title="Position">Pos</abbr></th>
                    <th>Title</th>
                    <th>Artist</th>
                    <th>Label</th>
                    <th><abbr title="Catalogue Number">CN</abbr></th>
                    <th>Genre</th>
                    <th>Medium</th>
                    <th>Released</th>
                    <th>Purchased</th>
                </tr>
            </thead>
            <tbody>
                `)
		for i, row := range p.Rows {
			qw422016.N().S(`
                    <tr>
                        <td>`)
			qw422016.N().D(i + 1)
			qw422016.N().S(`</td>
                        <td>`)
			qw422016.E().S(row.Title)
			qw422016.N().S(`</td>
                        <td>`)
			qw422016.E().S(row.Artist)
			qw422016.N().S(`</td>
                        <td>`)
			qw422016.E().S(row.Label)
			qw422016.N().S(`</td>
                        <td>`)
			qw422016.E().S(row.CN)
			qw422016.N().S(`</td>
                        <td>`)
			qw422016.E().S(row.Genre)
			qw422016.N().S(`</td>
                        <td>`)
			qw422016.N().S(formatMedium(row.Medium))
			qw422016.N().S(`</td>
                        <td>`)
			qw422016.E().S(row.Released.Format("2006-01-02"))
			qw422016.N().S(`</td>

                        `)
			if row.Purchased.Time.IsZero() {
				qw422016.N().S(`
                            <td>N/A</td>
                        `)
			} else {
				qw422016.N().S(`
                            <td>`)
				qw422016.E().S(row.Purchased.Time.Format("2006-01-02"))
				qw422016.N().S(`</td>
                        `)
			}
			qw422016.N().S(`
                    </tr>
                `)
		}
		qw422016.N().S(`
            </tbody>
        </table>
    </div>
`)
	}
	qw422016.N().S(`
`)
}

func (p *IndexPage) WriteBody(qq422016 qtio422016.Writer) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	p.StreamBody(qw422016)
	qt422016.ReleaseWriter(qw422016)
}

func (p *IndexPage) Body() string {
	qb422016 := qt422016.AcquireByteBuffer()
	p.WriteBody(qb422016)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}
