// Code generated by qtc from "admin_edit.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

package templates

import (
	"github.com/holedaemon/turnttable/internal/db/models"
)

import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

type AdminEditPage struct {
	BasePage
	Record *models.Record
}

func (p *AdminEditPage) StreamTitle(qw422016 *qt422016.Writer) {
	qw422016.N().S(`Edit Record`)
}

func (p *AdminEditPage) WriteTitle(qq422016 qtio422016.Writer) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	p.StreamTitle(qw422016)
	qt422016.ReleaseWriter(qw422016)
}

func (p *AdminEditPage) Title() string {
	qb422016 := qt422016.AcquireByteBuffer()
	p.WriteTitle(qb422016)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}

func (p *AdminEditPage) StreamBody(qw422016 *qt422016.Writer) {
	qw422016.N().S(`
<form method="post">
    <div class="columns is-multiline mx-1">
        <div class="column is-half">
            <div class="field">
                <label class="label has-text-white-ter">Release Title</label>
                <div class="control">
                    <input class="input" type="text" name="title" placeholder="Release Title" value="`)
	qw422016.E().S(p.Record.Title)
	qw422016.N().S(`" required>
                </div>
            </div>
        </div>
        <div class="column is-half">
            <div class="field">
                <label class="label has-text-white-ter">Artist</label>
                <div class="control">
                    <input class="input" type="text" name="artist" placeholder="Artist" value="`)
	qw422016.E().S(p.Record.Artist)
	qw422016.N().S(`" required>
                </div>
            </div>
        </div>
        <div class="column is-half">
            <div class="field">
                <label class="label has-text-white-ter">Label</label>
                <div class="control">
                    <input class="input" type="text" name="label" placeholder="Label" value="`)
	qw422016.E().S(p.Record.Label)
	qw422016.N().S(`" required>
                </div>
            </div>
        </div>
        <div class="column is-half">
            <div class="field">
                <label class="label has-text-white-ter">Catalogue Number</label>
                <div class="control">
                    <input class="input" type="text" name="cn" placeholder="Catalogue Number" value="`)
	qw422016.E().S(p.Record.CN)
	qw422016.N().S(`" required>
                </div>
            </div>
        </div>
        <div class="column is-half">
            <div class="field">
                <label class="label has-text-white-ter">Genre</label>
                <div class="control">
                    <input class="input" type="text" name="genre" placeholder="Genre" value="`)
	qw422016.E().S(p.Record.Genre)
	qw422016.N().S(`" required>
                </div>
            </div>
        </div>
        <div class="column is-half">
            <div class="field">
                <label class="label has-text-white-ter">Released</label>
                <div class="control">
                    <input class="input" type="date" name="release" value="`)
	qw422016.E().S(p.Record.Released.Format("2006-01-02"))
	qw422016.N().S(`" required>
                </div>
            </div>
        </div>
        <div class="column is-half">
            <div class="field">
                <label class="label has-text-white-ter">Purchased</label>
                <div class="control">
                    <input class="input" type="date" name="purchased" value="`)
	qw422016.E().S(p.Record.Purchased.Time.Format("2006-01-02"))
	qw422016.N().S(`">
                </div>
            </div>
        </div>
        <div class="column is-one-quarter">
            <div class="field">
                <label class="label has-text-white-ter">Medium</label>
                <div class="control">
                    <div class="select">
                        <select name="medium">
                            <option value="cd" `)
	if p.Record.Medium == models.MediumCD {
		qw422016.N().S(` selected `)
	}
	qw422016.N().S(`>CD</option>
                            <option value="vinyl" `)
	if p.Record.Medium == models.MediumVinyl {
		qw422016.N().S(` selected `)
	}
	qw422016.N().S(`>Vinyl</option>
                            <option value="cassette" `)
	if p.Record.Medium == models.MediumCassette {
		qw422016.N().S(` selected `)
	}
	qw422016.N().S(`>Cassette</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="columns mx-1">
        <div class="column is-one-quarter">
            <div class="field">
                <div class="control">
                    <button class="button is-primary">Submit</button>
                </div>
            </div>
        </div>
    </div>
</form>
`)
}

func (p *AdminEditPage) WriteBody(qq422016 qtio422016.Writer) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	p.StreamBody(qw422016)
	qt422016.ReleaseWriter(qw422016)
}

func (p *AdminEditPage) Body() string {
	qb422016 := qt422016.AcquireByteBuffer()
	p.WriteBody(qb422016)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}
