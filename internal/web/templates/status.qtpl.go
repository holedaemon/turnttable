// Code generated by qtc from "status.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

package templates

import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

type StatusPage struct {
	BasePage
	PageTitle string
	Header    string
	Subtitle  string
}

func (p *StatusPage) StreamTitle(qw422016 *qt422016.Writer) {
	qw422016.E().S(p.PageTitle)
}

func (p *StatusPage) WriteTitle(qq422016 qtio422016.Writer) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	p.StreamTitle(qw422016)
	qt422016.ReleaseWriter(qw422016)
}

func (p *StatusPage) Title() string {
	qb422016 := qt422016.AcquireByteBuffer()
	p.WriteTitle(qb422016)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}

func (p *StatusPage) StreamBody(qw422016 *qt422016.Writer) {
	qw422016.N().S(`
<section class="hero is-black">
    <div class="hero-body">
        <p class="title">`)
	qw422016.E().S(p.Header)
	qw422016.N().S(`</p>
        <p class="subtitle">`)
	qw422016.E().S(p.Subtitle)
	qw422016.N().S(`</p>
    </div>
</section>
`)
}

func (p *StatusPage) WriteBody(qq422016 qtio422016.Writer) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	p.StreamBody(qw422016)
	qt422016.ReleaseWriter(qw422016)
}

func (p *StatusPage) Body() string {
	qb422016 := qt422016.AcquireByteBuffer()
	p.WriteBody(qb422016)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}
